<?xml version="1.0" encoding="UTF-8"?>
<catalogue xmlns="http://www.metadataregistry.org.uk/assets/schema/2.2/metadataregistry.xsd">
    <dataClass name="Locomotive" id="http://www.example.com/models/Locomotive" status="DRAFT">
        <dataElement name="Factor of Adhesion" id="http://www.example.com/elements/Adhesion" status="DRAFT">
            <dataType name="Force" id="http://www.example.com/domains/Force" status="DRAFT">
                <description>A force is a push or pull upon an object resulting from the object's interaction with another object.</description>
                <regex>\d+</regex>
                <measurementUnit symbol="N" name="Newton" id="http://www.example.com/units/Newton" status="DRAFT">
                    <description>The newton (symbol: N) is the International System of Units (SI) derived unit of force.</description>
                    <extensions>
                        <extension key="From">SI</extension>
                    </extensions>
                    <relationships>
                        <from relationshipType="base" ref="http://www.example.com/types/Decimal" />
                    </relationships>
                </measurementUnit>
            </dataType>
        </dataElement>
        <dataClass name="Engine" id="http://www.example.com/models/Engine" status="DRAFT">
            <dataElement id="http://www.example.com/elements/Adhesion">
                <metadata>
                    <extension key="Min. Occurs">0</extension>
                </metadata>
            </dataElement>
            <validationRule name="Locomotives Rules" id="http://www.example.com/rules/LocomotivesRules" status="DRAFT">
                <component>Southeast Lines</component>
                <ruleFocus>Focus on trains not cars</ruleFocus>
                <trigger>When the new route is planned</trigger>
                <rule>IF something THEN something else</rule>
                <errorCondition>stop doing everytihng</errorCondition>
                <issueRecord>MET-XXXX</issueRecord>
                <notification>trains should go cars should stop</notification>
                <notificationTarget>the conductor</notificationTarget>
                <dataElement id="http://www.example.com/elements/Adhesion" />
            </validationRule>
        </dataClass>
    </dataClass>
    <relationshipTypes>
        <relationshipType name="base" source="org.modelcatalogue.core.CatalogueElement" destination="org.modelcatalogue.core.CatalogueElement">
            <sourceToDestination label="is base for">Any catalogue element can be base for multiple elements of the same type.</sourceToDestination>
            <destinationToSource label="is based on">Any catalogue element can be based on multiple elements of the same type. Value domains will first use rules of the base value domains and than their owns when validating input values.</destinationToSource>
            <rule>isSameClass()</rule>
        </relationshipType>
        <relationshipType name="containment" source="org.modelcatalogue.core.DataClass" destination="org.modelcatalogue.core.DataElement" versionSpecific="true">
            <sourceToDestination label="contains">Model can contain multiple data elements. Contained data elements are finalized when the model is finalized.</sourceToDestination>
            <destinationToSource label="contained in">Data element can be contained in multiple models. When new draft of the data element is created then drafts for all containing models are created as well.</destinationToSource>
            <rule>String minOccursString = ext['Min Occurs']
                String maxOccursString = ext['Max Occurs']

                Integer minOccurs = minOccursString in ['unbounded', 'null', '*', null, ''] ? 0 : (minOccursString as Integer)
                Integer maxOccurs = maxOccursString in ['unbounded', 'null', '*', null, ''] ? Integer.MAX_VALUE : (maxOccursString as Integer)

                if (minOccurs &lt; 0) {
                return ["relationshipType.containment.min.occurs.less.than.zero", "'Max Occurs' has to be greater than zero"]
                }
                if (maxOccurs &lt; minOccurs) {
                return ["relationshipType.containment.min.occurs.greater.than.max.occurs", "The metadata 'Min Occurs' cannot be greater than 'Min Occurs'"]
                }
                if (maxOccurs &lt; 1) {
                return ["relationshipType.containment.max.occurs.zero", "The metadata 'Max Occurs' must be greater than zero"]
                }

                return true</rule>
        </relationshipType>
        <relationshipType name="hierarchy" source="org.modelcatalogue.core.DataClass" destination="org.modelcatalogue.core.DataClass" versionSpecific="true">
            <sourceToDestination label="parent of">Model can contain (be parent of) multiple models. Child models are finalized when parent model is finalized,</sourceToDestination>
            <destinationToSource label="child of">Model can be contained (be child model) in multiple models. When draft is created for child model drafts for parent models are created as well.</destinationToSource>
        </relationshipType>
        <relationshipType name="involvedness" source="org.modelcatalogue.core.DataElement" destination="org.modelcatalogue.core.ValidationRule" versionSpecific="true">
            <sourceToDestination label="is involved in">Data element can be involved in multiple validation rules</sourceToDestination>
            <destinationToSource label="involves">Validation rule can involve multiple data elements</destinationToSource>
        </relationshipType>
        <relationshipType name="ruleContext" source="org.modelcatalogue.core.DataClass" destination="org.modelcatalogue.core.ValidationRule" versionSpecific="true">
            <sourceToDestination label="provides context for">Data class can provide context for multiple validation rules</sourceToDestination>
            <destinationToSource label="applied within context">Validation rule is applied within context of data class.</destinationToSource>
        </relationshipType>
    </relationshipTypes>
</catalogue>
