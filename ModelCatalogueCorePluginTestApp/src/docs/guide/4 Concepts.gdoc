
h2. [model|Domain Classes]

A Model contains DataElements.

A model within the context of a ConceptualDomain can instantiate the containing data elements with the appropriate value domains
i.e. the rules and constraints that are applicable in the given context.
Models are hierarchical element and can be parents of or children of other models.
Models are [publishedElement|Domain Classes] i.e. once a model is finalized it cannot be changed instead a new version will be created that supersedes the original. *
Models are  [extendibleElement|Domain Classes] which allows the user add additional metadata to the element.

i.e.
- a model for a book:
- contains the data elements author and isbn.
{code}
<xs:complexType name="Book">
 <xs:element name="author" type="xs:string"/>
 <xs:element name="isbn" type="xs:string"/>
 <xs:complexType name="Chapter">
  <xs:element name="content" type="xs:string"/>
 </xs:complexType>
</xs:complexType>
{code}

please see [model|Domain Classes] for more details

h2. [dataElement|Domain Classes]

A DataElement is an atomic unit used to describe another piece data.
It can be instantiated by a value domain when it is contained in a Model within the context of a ConceptualDomain
Data Elements are [publishedElement|Domain Classes]
i.e. once a data element is finalized it cannot be further changed, instead a new version will be created that supersedes the original.*
Data Elements are also [extendibleElement|Domain Classes] which allows the user add additional metadata to the element.



