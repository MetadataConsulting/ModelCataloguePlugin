import org.springframework.http.HttpMethod

class ModelCatalogueCorePluginUrlMappings {

	static mappings = {

        "/api/modelCatalogue/core/forms/generate/$id" (controller: 'formGenerator', action: 'generateForm', method: HttpMethod.GET)
        "/api/modelCatalogue/core/forms/preview/$id" (controller: 'formGenerator', action: 'previewForm', method: HttpMethod.GET)

        "/catalogue/upload" (controller: "dataImport", action: 'upload', method: HttpMethod.POST)

        // Catalogue
        "/catalogue/ext/$key/$value" (controller: 'catalogue', action: 'ext', method: HttpMethod.GET)
        "/catalogue/ext/$key/$value/export" (controller: 'catalogue', action: 'ext', method: HttpMethod.GET)
        "/catalogue/$resource/$id(.${version})?" (controller: 'catalogue', action: 'xref', method: HttpMethod.GET)
        "/catalogue/$resource/$id(.${version})?/export" (controller: 'catalogue', action: 'xref', method: HttpMethod.GET) {
            format = 'xml'
        }

        "/api/modelCatalogue/core/feedback"(controller: 'catalogue', action: 'feedbacks', method: HttpMethod.GET)
        "/api/modelCatalogue/core/feedback/$key"(controller: 'catalogue', action: 'feedback', method: HttpMethod.GET)
        "/api/modelCatalogue/core/logs"(controller: 'logging', action: 'logsToAssets', method: HttpMethod.GET)

        // DataClass
        "/api/modelCatalogue/core/dataClass" (controller: 'dataClass', action: 'index', method: HttpMethod.GET)
        "/api/modelCatalogue/core/dataClass" (controller: 'dataClass', action: 'save', method: HttpMethod.POST)
        "/api/modelCatalogue/core/dataClass/search/$search?" (controller: 'dataClass', action: 'search', method: HttpMethod.GET)
        "/api/modelCatalogue/core/dataClass/$id/validate" (controller: 'dataClass', action: 'validate', method: HttpMethod.POST)
        "/api/modelCatalogue/core/dataClass/validate" (controller: 'dataClass', action: 'validate', method: HttpMethod.POST)
        "/api/modelCatalogue/core/dataClass/$id" (controller: 'dataClass', action: 'show', method: HttpMethod.GET)
        "/api/modelCatalogue/core/dataClass/$id" (controller: 'dataClass', action: 'update', method: HttpMethod.PUT)
        "/api/modelCatalogue/core/dataClass/$id" (controller: 'dataClass', action: 'delete', method: HttpMethod.DELETE)
        "/api/modelCatalogue/core/dataClass/$id/outgoing/search" (controller: 'dataClass', action: 'searchOutgoing', method: HttpMethod.GET)
        "/api/modelCatalogue/core/dataClass/$id/outgoing/$type/search" (controller: 'dataClass', action: 'searchOutgoing', method: HttpMethod.GET)
        "/api/modelCatalogue/core/dataClass/$id/outgoing/$type" (controller: 'dataClass', action: 'outgoing', method: HttpMethod.GET)
        "/api/modelCatalogue/core/dataClass/$id/outgoing/$type" (controller: 'dataClass', action: 'addOutgoing', method: HttpMethod.POST)
        "/api/modelCatalogue/core/dataClass/$id/outgoing/$type" (controller: 'dataClass', action: 'removeOutgoing', method: HttpMethod.DELETE)
        "/api/modelCatalogue/core/dataClass/$id/outgoing/$type" (controller: 'dataClass', action: 'reorderOutgoing', method: HttpMethod.PUT)
        "/api/modelCatalogue/core/dataClass/$id/incoming/search" (controller: 'dataClass', action: 'searchIncoming', method: HttpMethod.GET)
        "/api/modelCatalogue/core/dataClass/$id/incoming/$type/search" (controller: 'dataClass', action: 'searchIncoming', method: HttpMethod.GET)
        "/api/modelCatalogue/core/dataClass/$id/incoming/$type" (controller: 'dataClass', action: 'incoming', method: HttpMethod.GET)
        "/api/modelCatalogue/core/dataClass/$id/incoming/$type" (controller: 'dataClass', action: 'addIncoming', method: HttpMethod.POST)
        "/api/modelCatalogue/core/dataClass/$id/incoming/$type" (controller: 'dataClass', action: 'removeIncoming', method: HttpMethod.DELETE)
        "/api/modelCatalogue/core/dataClass/$id/incoming/$type" (controller: 'dataClass', action: 'reorderIncoming', method: HttpMethod.PUT)
        "/api/modelCatalogue/core/dataClass/$id/incoming" (controller: 'dataClass', action: 'incoming', method: HttpMethod.GET)
        "/api/modelCatalogue/core/dataClass/$id/outgoing" (controller: 'dataClass', action: 'outgoing', method: HttpMethod.GET)
        "/api/modelCatalogue/core/dataClass/$id/mapping/$destination" (controller: 'dataClass', action: 'addMapping', method: HttpMethod.POST)
        "/api/modelCatalogue/core/dataClass/$id/mapping/$destination" (controller: 'dataClass', action: 'removeMapping', method: HttpMethod.DELETE)
        "/api/modelCatalogue/core/dataClass/$id/mapping" (controller: 'dataClass', action: 'mappings', method: HttpMethod.GET)
        "/api/modelCatalogue/core/dataClass/$id/typeHierarchy" (controller: 'dataClass', action: 'typeHierarchy', method: HttpMethod.GET)
        "/api/modelCatalogue/core/dataClass/$id/history"(controller: 'dataClass', action: 'history', method: HttpMethod.GET)
        "/api/modelCatalogue/core/dataClass/$id/path"(controller: 'dataClass', action: 'path', method: HttpMethod.GET)
        "/api/modelCatalogue/core/dataClass/$id/archive"(controller: 'dataClass', action: 'archive', method: HttpMethod.POST)
        "/api/modelCatalogue/core/dataClass/$id/restore"(controller: 'dataClass', action: 'restore', method: HttpMethod.POST)
        "/api/modelCatalogue/core/dataClass/$id/finalize"(controller: 'dataClass', action: 'finalizeElement', method: HttpMethod.POST)
        "/api/modelCatalogue/core/dataClass/$id/clone/$destinationDataModelId"(controller: 'dataClass', action: 'cloneElement', method: HttpMethod.POST)
        "/api/modelCatalogue/core/dataClass/$source/merge/$destination"(controller: 'dataClass', action: 'merge', method: HttpMethod.POST)
        "/api/modelCatalogue/core/dataClass/$id/inventoryDoc"(controller: 'dataClass', action: 'inventoryDoc', method: HttpMethod.GET)
        "/api/modelCatalogue/core/dataClass/$id/classificationChangelog"(controller: 'dataClass', action: 'changelogDoc', method: HttpMethod.GET)
        "/api/modelCatalogue/core/dataClass/$id/inventorySpreadsheet"(controller: 'dataClass', action: 'inventorySpreadsheet', method: HttpMethod.GET)
        "/api/modelCatalogue/core/dataClass/$id/referenceType"(controller: 'dataClass', action: 'referenceTypes', method: HttpMethod.GET)
        "/api/modelCatalogue/core/dataClass/$id/content"(controller: 'dataClass', action: 'content', method: HttpMethod.GET)

        // CatalogueElement
        "/api/modelCatalogue/core/catalogueElement" (controller: 'catalogueElement', action: 'index', method: HttpMethod.GET)
        "/api/modelCatalogue/core/catalogueElement" (controller: 'catalogueElement', action: 'save', method: HttpMethod.POST)
        "/api/modelCatalogue/core/catalogueElement/search/$search?" (controller: 'catalogueElement', action: 'search', method: HttpMethod.GET)
        "/api/modelCatalogue/core/catalogueElement/$id/validate" (controller: 'catalogueElement', action: 'validate', method: HttpMethod.POST)
        "/api/modelCatalogue/core/catalogueElement/validate" (controller: 'catalogueElement', action: 'validate', method: HttpMethod.POST)
        "/api/modelCatalogue/core/catalogueElement/$id" (controller: 'catalogueElement', action: 'show', method: HttpMethod.GET)
        "/api/modelCatalogue/core/catalogueElement/$id" (controller: 'catalogueElement', action: 'update', method: HttpMethod.PUT)
        "/api/modelCatalogue/core/catalogueElement/$id" (controller: 'catalogueElement', action: 'delete', method: HttpMethod.DELETE)
        "/api/modelCatalogue/core/catalogueElement/$id/outgoing/search" (controller: 'catalogueElement', action: 'searchOutgoing', method: HttpMethod.GET)
        "/api/modelCatalogue/core/catalogueElement/$id/outgoing/$type/search" (controller: 'catalogueElement', action: 'searchOutgoing', method: HttpMethod.GET)
        "/api/modelCatalogue/core/catalogueElement/$id/outgoing/$type" (controller: 'catalogueElement', action: 'outgoing', method: HttpMethod.GET)
        "/api/modelCatalogue/core/catalogueElement/$id/outgoing/$type" (controller: 'catalogueElement', action: 'addOutgoing', method: HttpMethod.POST)
        "/api/modelCatalogue/core/catalogueElement/$id/outgoing/$type" (controller: 'catalogueElement', action: 'removeOutgoing', method: HttpMethod.DELETE)
        "/api/modelCatalogue/core/catalogueElement/$id/outgoing/$type" (controller: 'catalogueElement', action: 'reorderOutgoing', method: HttpMethod.PUT)
        "/api/modelCatalogue/core/catalogueElement/$id/incoming/search" (controller: 'catalogueElement', action: 'searchIncoming', method: HttpMethod.GET)
        "/api/modelCatalogue/core/catalogueElement/$id/incoming/$type/search" (controller: 'catalogueElement', action: 'searchIncoming', method: HttpMethod.GET)
        "/api/modelCatalogue/core/catalogueElement/$id/incoming/$type" (controller: 'catalogueElement', action: 'incoming', method: HttpMethod.GET)
        "/api/modelCatalogue/core/catalogueElement/$id/incoming/$type" (controller: 'catalogueElement', action: 'addIncoming', method: HttpMethod.POST)
        "/api/modelCatalogue/core/catalogueElement/$id/incoming/$type" (controller: 'catalogueElement', action: 'removeIncoming', method: HttpMethod.DELETE)
        "/api/modelCatalogue/core/catalogueElement/$id/incoming/$type" (controller: 'catalogueElement', action: 'reorderIncoming', method: HttpMethod.PUT)
        "/api/modelCatalogue/core/catalogueElement/$id/incoming" (controller: 'catalogueElement', action: 'incoming', method: HttpMethod.GET)
        "/api/modelCatalogue/core/catalogueElement/$id/outgoing" (controller: 'catalogueElement', action: 'outgoing', method: HttpMethod.GET)
        "/api/modelCatalogue/core/catalogueElement/$id/mapping/$destination" (controller: 'catalogueElement', action: 'addMapping', method: HttpMethod.POST)
        "/api/modelCatalogue/core/catalogueElement/$id/mapping/$destination" (controller: 'catalogueElement', action: 'removeMapping', method: HttpMethod.DELETE)
        "/api/modelCatalogue/core/catalogueElement/$id/mapping" (controller: 'catalogueElement', action: 'mappings', method: HttpMethod.GET)
        "/api/modelCatalogue/core/catalogueElement/$id/typeHierarchy" (controller: 'catalogueElement', action: 'typeHierarchy', method: HttpMethod.GET)
        "/api/modelCatalogue/core/catalogueElement/$id/history"(controller: 'catalogueElement', action: 'history', method: HttpMethod.GET)
        "/api/modelCatalogue/core/catalogueElement/$id/path"(controller: 'catalogueElement', action: 'path', method: HttpMethod.GET)
        "/api/modelCatalogue/core/catalogueElement/$id/archive"(controller: 'catalogueElement', action: 'archive', method: HttpMethod.POST)
        "/api/modelCatalogue/core/catalogueElement/$id/restore"(controller: 'catalogueElement', action: 'restore', method: HttpMethod.POST)
        "/api/modelCatalogue/core/catalogueElement/$id/finalize"(controller: 'catalogueElement', action: 'finalizeElement', method: HttpMethod.POST)
        "/api/modelCatalogue/core/catalogueElement/$id/clone/$destinationDataModelId"(controller: 'catalogueElement', action: 'cloneElement', method: HttpMethod.POST)
        "/api/modelCatalogue/core/catalogueElement/$source/merge/$destination"(controller: 'catalogueElement', action: 'merge', method: HttpMethod.POST)

        // Classification
        "/api/modelCatalogue/core/classification" (controller: 'dataModel', action: 'index', method: HttpMethod.GET)
        "/api/modelCatalogue/core/classification" (controller: 'dataModel', action: 'save', method: HttpMethod.POST)
        "/api/modelCatalogue/core/classification/search/$search?" (controller: 'dataModel', action: 'search', method: HttpMethod.GET)
        "/api/modelCatalogue/core/classification/$id/validate" (controller: 'dataModel', action: 'validate', method: HttpMethod.POST)
        "/api/modelCatalogue/core/classification/validate" (controller: 'dataModel', action: 'validate', method: HttpMethod.POST)
        "/api/modelCatalogue/core/classification/$id" (controller: 'dataModel', action: 'show', method: HttpMethod.GET)
        "/api/modelCatalogue/core/classification/$id" (controller: 'dataModel', action: 'update', method: HttpMethod.PUT)
        "/api/modelCatalogue/core/classification/$id" (controller: 'dataModel', action: 'delete', method: HttpMethod.DELETE)
        "/api/modelCatalogue/core/classification/$id/outgoing/search" (controller: 'dataModel', action: 'searchOutgoing', method: HttpMethod.GET)
        "/api/modelCatalogue/core/classification/$id/outgoing/$type/search" (controller: 'dataModel', action: 'searchOutgoing', method: HttpMethod.GET)
        "/api/modelCatalogue/core/classification/$id/outgoing/$type" (controller: 'dataModel', action: 'outgoing', method: HttpMethod.GET)
        "/api/modelCatalogue/core/classification/$id/outgoing/$type" (controller: 'dataModel', action: 'addOutgoing', method: HttpMethod.POST)
        "/api/modelCatalogue/core/classification/$id/outgoing/$type" (controller: 'dataModel', action: 'removeOutgoing', method: HttpMethod.DELETE)
        "/api/modelCatalogue/core/classification/$id/outgoing/$type" (controller: 'dataModel', action: 'reorderOutgoing', method: HttpMethod.PUT)
        "/api/modelCatalogue/core/classification/$id/incoming/search" (controller: 'dataModel', action: 'searchIncoming', method: HttpMethod.GET)
        "/api/modelCatalogue/core/classification/$id/incoming/$type/search" (controller: 'dataModel', action: 'searchIncoming', method: HttpMethod.GET)
        "/api/modelCatalogue/core/classification/$id/incoming/$type" (controller: 'dataModel', action: 'incoming', method: HttpMethod.GET)
        "/api/modelCatalogue/core/classification/$id/incoming/$type" (controller: 'dataModel', action: 'addIncoming', method: HttpMethod.POST)
        "/api/modelCatalogue/core/classification/$id/incoming/$type" (controller: 'dataModel', action: 'removeIncoming', method: HttpMethod.DELETE)
        "/api/modelCatalogue/core/classification/$id/incoming/$type" (controller: 'dataModel', action: 'reorderIncoming', method: HttpMethod.PUT)
        "/api/modelCatalogue/core/classification/$id/incoming" (controller: 'dataModel', action: 'incoming', method: HttpMethod.GET)
        "/api/modelCatalogue/core/classification/$id/outgoing" (controller: 'dataModel', action: 'outgoing', method: HttpMethod.GET)
        "/api/modelCatalogue/core/classification/$id/mapping/$destination" (controller: 'dataModel', action: 'addMapping', method: HttpMethod.POST)
        "/api/modelCatalogue/core/classification/$id/mapping/$destination" (controller: 'dataModel', action: 'removeMapping', method: HttpMethod.DELETE)
        "/api/modelCatalogue/core/classification/$id/mapping" (controller: 'dataModel', action: 'mappings', method: HttpMethod.GET)
        "/api/modelCatalogue/core/classification/$id/typeHierarchy" (controller: 'dataModel', action: 'typeHierarchy', method: HttpMethod.GET)
        "/api/modelCatalogue/core/classification/$id/history"(controller: 'dataModel', action: 'history', method: HttpMethod.GET)
        "/api/modelCatalogue/core/classification/$id/path"(controller: 'dataModel', action: 'path', method: HttpMethod.GET)
        "/api/modelCatalogue/core/classification/$id/archive"(controller: 'dataModel', action: 'archive', method: HttpMethod.POST)
        "/api/modelCatalogue/core/classification/$id/restore"(controller: 'dataModel', action: 'restore', method: HttpMethod.POST)
        "/api/modelCatalogue/core/classification/$id/finalize"(controller: 'dataModel', action: 'finalizeElement', method: HttpMethod.POST)
        "/api/modelCatalogue/core/classification/$id/clone/$destinationDataModelId"(controller: 'dataModel', action: 'cloneElement', method: HttpMethod.POST)
        "/api/modelCatalogue/core/classification/$source/merge/$destination"(controller: 'dataModel', action: 'merge', method: HttpMethod.POST)
        "/api/modelCatalogue/core/classification/preload"(controller: 'catalogue', action: 'dataModelsForPreload', method: HttpMethod.GET)
        "/api/modelCatalogue/core/classification/preload"(controller: 'catalogue', action: 'importFromUrl', method: HttpMethod.POST)
        "/api/modelCatalogue/core/classification/$id/declares"(controller: 'dataModel', action: 'declares', method: HttpMethod.GET)
        "/api/modelCatalogue/core/classification/$id/containsOrImports/$other"(controller: 'dataModel', action: 'containsOrImports', method: HttpMethod.GET)
        "/api/modelCatalogue/core/classification/$id/content"(controller: 'dataModel', action: 'content', method: HttpMethod.GET)
        "/api/modelCatalogue/core/classification/$id/newVersion"(controller: 'dataModel', action: 'newVersion', method: HttpMethod.POST)
        "/api/modelCatalogue/core/classification/$id/inventorySpreadsheet"(controller: 'dataModel', action: 'inventorySpreadsheet', method: HttpMethod.GET)
        "/api/modelCatalogue/core/classification/$id/gridSpreadsheet"(controller: 'dataModel', action: 'gridSpreadsheet', method: HttpMethod.GET)
        "/api/modelCatalogue/core/classification/$id/excelExporterSpreadsheet"(controller: 'dataModel', action: 'excelExporterSpreadsheet', method: HttpMethod.GET)
        "/api/modelCatalogue/core/classification/$id/inventoryDoc"(controller: 'dataModel', action: 'inventoryDoc', method: HttpMethod.GET)
        "/api/modelCatalogue/core/classification/$id/dependents"(controller: 'dataModel', action: 'dependents', method: HttpMethod.GET)
        "/api/modelCatalogue/core/classification/$id/reindex"(controller: 'dataModel', action: 'reindex', method: HttpMethod.POST)

        // DataClass
        "/api/modelCatalogue/core/model" (controller: 'dataClass', action: 'index', method: HttpMethod.GET)
        "/api/modelCatalogue/core/model" (controller: 'dataClass', action: 'save', method: HttpMethod.POST)
        "/api/modelCatalogue/core/model/search/$search?" (controller: 'dataClass', action: 'search', method: HttpMethod.GET)
        "/api/modelCatalogue/core/model/$id/validate" (controller: 'dataClass', action: 'validate', method: HttpMethod.POST)
        "/api/modelCatalogue/core/model/validate" (controller: 'dataClass', action: 'validate', method: HttpMethod.POST)
        "/api/modelCatalogue/core/model/$id" (controller: 'dataClass', action: 'show', method: HttpMethod.GET)
        "/api/modelCatalogue/core/model/$id" (controller: 'dataClass', action: 'update', method: HttpMethod.PUT)
        "/api/modelCatalogue/core/model/$id" (controller: 'dataClass', action: 'delete', method: HttpMethod.DELETE)
        "/api/modelCatalogue/core/model/$id/outgoing/search" (controller: 'dataClass', action: 'searchOutgoing', method: HttpMethod.GET)
        "/api/modelCatalogue/core/model/$id/outgoing/$type/search" (controller: 'dataClass', action: 'searchOutgoing', method: HttpMethod.GET)
        "/api/modelCatalogue/core/model/$id/outgoing/$type" (controller: 'dataClass', action: 'outgoing', method: HttpMethod.GET)
        "/api/modelCatalogue/core/model/$id/outgoing/$type" (controller: 'dataClass', action: 'addOutgoing', method: HttpMethod.POST)
        "/api/modelCatalogue/core/model/$id/outgoing/$type" (controller: 'dataClass', action: 'removeOutgoing', method: HttpMethod.DELETE)
        "/api/modelCatalogue/core/model/$id/outgoing/$type" (controller: 'dataClass', action: 'reorderOutgoing', method: HttpMethod.PUT)
        "/api/modelCatalogue/core/model/$id/incoming/search" (controller: 'dataClass', action: 'searchIncoming', method: HttpMethod.GET)
        "/api/modelCatalogue/core/model/$id/incoming/$type/search" (controller: 'dataClass', action: 'searchIncoming', method: HttpMethod.GET)
        "/api/modelCatalogue/core/model/$id/incoming/$type" (controller: 'dataClass', action: 'incoming', method: HttpMethod.GET)
        "/api/modelCatalogue/core/model/$id/incoming/$type" (controller: 'dataClass', action: 'addIncoming', method: HttpMethod.POST)
        "/api/modelCatalogue/core/model/$id/incoming/$type" (controller: 'dataClass', action: 'removeIncoming', method: HttpMethod.DELETE)
        "/api/modelCatalogue/core/model/$id/incoming/$type" (controller: 'dataClass', action: 'reorderIncoming', method: HttpMethod.PUT)
        "/api/modelCatalogue/core/model/$id/incoming" (controller: 'dataClass', action: 'incoming', method: HttpMethod.GET)
        "/api/modelCatalogue/core/model/$id/outgoing" (controller: 'dataClass', action: 'outgoing', method: HttpMethod.GET)
        "/api/modelCatalogue/core/model/$id/mapping/$destination" (controller: 'dataClass', action: 'addMapping', method: HttpMethod.POST)
        "/api/modelCatalogue/core/model/$id/mapping/$destination" (controller: 'dataClass', action: 'removeMapping', method: HttpMethod.DELETE)
        "/api/modelCatalogue/core/model/$id/mapping" (controller: 'dataClass', action: 'mappings', method: HttpMethod.GET)
        "/api/modelCatalogue/core/model/$id/typeHierarchy" (controller: 'dataClass', action: 'typeHierarchy', method: HttpMethod.GET)
        "/api/modelCatalogue/core/model/$id/history"(controller: 'dataClass', action: 'history', method: HttpMethod.GET)
        "/api/modelCatalogue/core/model/$id/path"(controller: 'dataClass', action: 'path', method: HttpMethod.GET)
        "/api/modelCatalogue/core/model/$id/archive"(controller: 'dataClass', action: 'archive', method: HttpMethod.POST)
        "/api/modelCatalogue/core/model/$id/restore"(controller: 'dataClass', action: 'restore', method: HttpMethod.POST)
        "/api/modelCatalogue/core/model/$id/finalize"(controller: 'dataClass', action: 'finalizeElement', method: HttpMethod.POST)
        "/api/modelCatalogue/core/model/$id/clone/$destinationDataModelId"(controller: 'dataClass', action: 'cloneElement', method: HttpMethod.POST)
        "/api/modelCatalogue/core/model/$source/merge/$destination"(controller: 'dataClass', action: 'merge', method: HttpMethod.POST)
        "/api/modelCatalogue/core/model/$id/inventoryDoc"(controller: 'dataClass', action: 'inventoryDoc', method: HttpMethod.GET)
        "/api/modelCatalogue/core/model/$id/classificationChangelog"(controller: 'dataClass', action: 'changelogDoc', method: HttpMethod.GET)
        "/api/modelCatalogue/core/model/$id/inventorySpreadsheet"(controller: 'dataClass', action: 'inventorySpreadsheet', method: HttpMethod.GET)
        "/api/modelCatalogue/core/model/$id/referenceType"(controller: 'dataClass', action: 'referenceTypes', method: HttpMethod.GET)
        "/api/modelCatalogue/core/model/$id/content"(controller: 'dataClass', action: 'content', method: HttpMethod.GET)

        // ValidationRule
        "/api/modelCatalogue/core/validationRule" (controller: 'validationRule', action: 'index', method: HttpMethod.GET)
        "/api/modelCatalogue/core/validationRule" (controller: 'validationRule', action: 'save', method: HttpMethod.POST)
        "/api/modelCatalogue/core/validationRule/search/$search?" (controller: 'validationRule', action: 'search', method: HttpMethod.GET)
        "/api/modelCatalogue/core/validationRule/$id/validate" (controller: 'validationRule', action: 'validate', method: HttpMethod.POST)
        "/api/modelCatalogue/core/validationRule/validate" (controller: 'validationRule', action: 'validate', method: HttpMethod.POST)
        "/api/modelCatalogue/core/validationRule/$id" (controller: 'validationRule', action: 'show', method: HttpMethod.GET)
        "/api/modelCatalogue/core/validationRule/$id" (controller: 'validationRule', action: 'update', method: HttpMethod.PUT)
        "/api/modelCatalogue/core/validationRule/$id" (controller: 'validationRule', action: 'delete', method: HttpMethod.DELETE)
        "/api/modelCatalogue/core/validationRule/$id/outgoing/search" (controller: 'validationRule', action: 'searchOutgoing', method: HttpMethod.GET)
        "/api/modelCatalogue/core/validationRule/$id/outgoing/$type/search" (controller: 'validationRule', action: 'searchOutgoing', method: HttpMethod.GET)
        "/api/modelCatalogue/core/validationRule/$id/outgoing/$type" (controller: 'validationRule', action: 'outgoing', method: HttpMethod.GET)
        "/api/modelCatalogue/core/validationRule/$id/outgoing/$type" (controller: 'validationRule', action: 'addOutgoing', method: HttpMethod.POST)
        "/api/modelCatalogue/core/validationRule/$id/outgoing/$type" (controller: 'validationRule', action: 'removeOutgoing', method: HttpMethod.DELETE)
        "/api/modelCatalogue/core/validationRule/$id/outgoing/$type" (controller: 'validationRule', action: 'reorderOutgoing', method: HttpMethod.PUT)
        "/api/modelCatalogue/core/validationRule/$id/incoming/search" (controller: 'validationRule', action: 'searchIncoming', method: HttpMethod.GET)
        "/api/modelCatalogue/core/validationRule/$id/incoming/$type/search" (controller: 'validationRule', action: 'searchIncoming', method: HttpMethod.GET)
        "/api/modelCatalogue/core/validationRule/$id/incoming/$type" (controller: 'validationRule', action: 'incoming', method: HttpMethod.GET)
        "/api/modelCatalogue/core/validationRule/$id/incoming/$type" (controller: 'validationRule', action: 'addIncoming', method: HttpMethod.POST)
        "/api/modelCatalogue/core/validationRule/$id/incoming/$type" (controller: 'validationRule', action: 'removeIncoming', method: HttpMethod.DELETE)
        "/api/modelCatalogue/core/validationRule/$id/incoming/$type" (controller: 'validationRule', action: 'reorderIncoming', method: HttpMethod.PUT)
        "/api/modelCatalogue/core/validationRule/$id/incoming" (controller: 'validationRule', action: 'incoming', method: HttpMethod.GET)
        "/api/modelCatalogue/core/validationRule/$id/outgoing" (controller: 'validationRule', action: 'outgoing', method: HttpMethod.GET)
        "/api/modelCatalogue/core/validationRule/$id/mapping/$destination" (controller: 'validationRule', action: 'addMapping', method: HttpMethod.POST)
        "/api/modelCatalogue/core/validationRule/$id/mapping/$destination" (controller: 'validationRule', action: 'removeMapping', method: HttpMethod.DELETE)
        "/api/modelCatalogue/core/validationRule/$id/mapping" (controller: 'validationRule', action: 'mappings', method: HttpMethod.GET)
        "/api/modelCatalogue/core/validationRule/$id/typeHierarchy" (controller: 'validationRule', action: 'typeHierarchy', method: HttpMethod.GET)
        "/api/modelCatalogue/core/validationRule/$id/history"(controller: 'validationRule', action: 'history', method: HttpMethod.GET)
        "/api/modelCatalogue/core/validationRule/$id/path"(controller: 'validationRule', action: 'path', method: HttpMethod.GET)
        "/api/modelCatalogue/core/validationRule/$id/archive"(controller: 'validationRule', action: 'archive', method: HttpMethod.POST)
        "/api/modelCatalogue/core/validationRule/$id/restore"(controller: 'validationRule', action: 'restore', method: HttpMethod.POST)
        "/api/modelCatalogue/core/validationRule/$id/finalize"(controller: 'validationRule', action: 'finalizeElement', method: HttpMethod.POST)
        "/api/modelCatalogue/core/validationRule/$id/clone/$destinationDataModelId"(controller: 'validationRule', action: 'cloneElement', method: HttpMethod.POST)
        "/api/modelCatalogue/core/validationRule/$source/merge/$destination"(controller: 'validationRule', action: 'merge', method: HttpMethod.POST)
        "/api/modelCatalogue/core/validationRule/$id/content"(controller: 'validationRule', action: 'content', method: HttpMethod.GET)

        // Tag
        "/api/modelCatalogue/core/tag/forDataModel/$dataModelId"(controller: 'tag', action: 'forDataModel', method: HttpMethod.GET)
        "/api/modelCatalogue/core/tag" (controller: 'tag', action: 'index', method: HttpMethod.GET)
        "/api/modelCatalogue/core/tag" (controller: 'tag', action: 'save', method: HttpMethod.POST)
        "/api/modelCatalogue/core/tag/search/$search?" (controller: 'tag', action: 'search', method: HttpMethod.GET)
        "/api/modelCatalogue/core/tag/$id/validate" (controller: 'tag', action: 'validate', method: HttpMethod.POST)
        "/api/modelCatalogue/core/tag/validate" (controller: 'tag', action: 'validate', method: HttpMethod.POST)
        "/api/modelCatalogue/core/tag/$id" (controller: 'tag', action: 'show', method: HttpMethod.GET)
        "/api/modelCatalogue/core/tag/$id" (controller: 'tag', action: 'update', method: HttpMethod.PUT)
        "/api/modelCatalogue/core/tag/$id" (controller: 'tag', action: 'delete', method: HttpMethod.DELETE)
        "/api/modelCatalogue/core/tag/$id/outgoing/search" (controller: 'tag', action: 'searchOutgoing', method: HttpMethod.GET)
        "/api/modelCatalogue/core/tag/$id/outgoing/$type/search" (controller: 'tag', action: 'searchOutgoing', method: HttpMethod.GET)
        "/api/modelCatalogue/core/tag/$id/outgoing/$type" (controller: 'tag', action: 'outgoing', method: HttpMethod.GET)
        "/api/modelCatalogue/core/tag/$id/outgoing/$type" (controller: 'tag', action: 'addOutgoing', method: HttpMethod.POST)
        "/api/modelCatalogue/core/tag/$id/outgoing/$type" (controller: 'tag', action: 'removeOutgoing', method: HttpMethod.DELETE)
        "/api/modelCatalogue/core/tag/$id/outgoing/$type" (controller: 'tag', action: 'reorderOutgoing', method: HttpMethod.PUT)
        "/api/modelCatalogue/core/tag/$id/incoming/search" (controller: 'tag', action: 'searchIncoming', method: HttpMethod.GET)
        "/api/modelCatalogue/core/tag/$id/incoming/$type/search" (controller: 'tag', action: 'searchIncoming', method: HttpMethod.GET)
        "/api/modelCatalogue/core/tag/$id/incoming/$type" (controller: 'tag', action: 'incoming', method: HttpMethod.GET)
        "/api/modelCatalogue/core/tag/$id/incoming/$type" (controller: 'tag', action: 'addIncoming', method: HttpMethod.POST)
        "/api/modelCatalogue/core/tag/$id/incoming/$type" (controller: 'tag', action: 'removeIncoming', method: HttpMethod.DELETE)
        "/api/modelCatalogue/core/tag/$id/incoming/$type" (controller: 'tag', action: 'reorderIncoming', method: HttpMethod.PUT)
        "/api/modelCatalogue/core/tag/$id/incoming" (controller: 'tag', action: 'incoming', method: HttpMethod.GET)
        "/api/modelCatalogue/core/tag/$id/outgoing" (controller: 'tag', action: 'outgoing', method: HttpMethod.GET)
        "/api/modelCatalogue/core/tag/$id/mapping/$destination" (controller: 'tag', action: 'addMapping', method: HttpMethod.POST)
        "/api/modelCatalogue/core/tag/$id/mapping/$destination" (controller: 'tag', action: 'removeMapping', method: HttpMethod.DELETE)
        "/api/modelCatalogue/core/tag/$id/mapping" (controller: 'tag', action: 'mappings', method: HttpMethod.GET)
        "/api/modelCatalogue/core/tag/$id/typeHierarchy" (controller: 'tag', action: 'typeHierarchy', method: HttpMethod.GET)
        "/api/modelCatalogue/core/tag/$id/history"(controller: 'tag', action: 'history', method: HttpMethod.GET)
        "/api/modelCatalogue/core/tag/$id/path"(controller: 'tag', action: 'path', method: HttpMethod.GET)
        "/api/modelCatalogue/core/tag/$id/archive"(controller: 'tag', action: 'archive', method: HttpMethod.POST)
        "/api/modelCatalogue/core/tag/$id/restore"(controller: 'tag', action: 'restore', method: HttpMethod.POST)
        "/api/modelCatalogue/core/tag/$id/finalize"(controller: 'tag', action: 'finalizeElement', method: HttpMethod.POST)
        "/api/modelCatalogue/core/tag/$id/clone/$destinationDataModelId"(controller: 'tag', action: 'cloneElement', method: HttpMethod.POST)
        "/api/modelCatalogue/core/tag/$source/merge/$destination"(controller: 'tag', action: 'merge', method: HttpMethod.POST)

        // Batch
        "/api/modelCatalogue/core/batch" (controller: 'batch', action: 'index', method: HttpMethod.GET)
        "/api/modelCatalogue/core/batch" (controller: 'batch', action: 'save', method: HttpMethod.POST)
        "/api/modelCatalogue/core/batch/search/$search?" (controller: 'batch', action: 'search', method: HttpMethod.GET)
        "/api/modelCatalogue/core/batch/$id/validate" (controller: 'batch', action: 'validate', method: HttpMethod.POST)
        "/api/modelCatalogue/core/batch/validate" (controller: 'batch', action: 'validate', method: HttpMethod.POST)
        "/api/modelCatalogue/core/batch/$id" (controller: 'batch', action: 'show', method: HttpMethod.GET)
        "/api/modelCatalogue/core/batch/$id" (controller: 'batch', action: 'update', method: HttpMethod.PUT)
        "/api/modelCatalogue/core/batch/$id" (controller: 'batch', action: 'delete', method: HttpMethod.DELETE)
        "/api/modelCatalogue/core/batch/$id/archive"(controller: 'batch', action:  'archive', method: HttpMethod.POST)
        "/api/modelCatalogue/core/batch/$id/run"(controller: 'batch', action: 'runAll', method: HttpMethod.POST)
        "/api/modelCatalogue/core/batch/$id/actions/$state?"(controller: 'batch', action: 'listActions', method: HttpMethod.GET)
        "/api/modelCatalogue/core/batch/$id/actions/$actionId/dismiss"(controller: 'batch', action: 'dismiss', method: HttpMethod.POST)
        "/api/modelCatalogue/core/batch/$id/actions/$actionId/reactivate"(controller: 'batch', action: 'reactivate', method: HttpMethod.POST)
        "/api/modelCatalogue/core/batch/$id/actions/$actionId/run"(controller: 'batch', action: 'run', method: HttpMethod.POST)
        "/api/modelCatalogue/core/batch/$id/actions/$actionId/parameters"(controller: 'batch', action: 'updateActionParameters', method: HttpMethod.PUT)
        "/api/modelCatalogue/core/batch/$id/actions/$actionId/dependsOn"(controller: 'batch', action: 'removeDependency', method: HttpMethod.DELETE)
        "/api/modelCatalogue/core/batch/$id/actions/$actionId/dependsOn"(controller: 'batch', action: 'addDependency', method: HttpMethod.POST)

        // RelationshipType
        "/api/modelCatalogue/core/relationshipType" (controller: 'relationshipType', action: 'index', method: HttpMethod.GET)
        "/api/modelCatalogue/core/relationshipType" (controller: 'relationshipType', action: 'save', method: HttpMethod.POST)
        "/api/modelCatalogue/core/relationshipType/search/$search?" (controller: 'relationshipType', action: 'search', method: HttpMethod.GET)
        "/api/modelCatalogue/core/relationshipType/$id/validate" (controller: 'relationshipType', action: 'validate', method: HttpMethod.POST)
        "/api/modelCatalogue/core/relationshipType/validate" (controller: 'relationshipType', action: 'validate', method: HttpMethod.POST)
        "/api/modelCatalogue/core/relationshipType/$id" (controller: 'relationshipType', action: 'show', method: HttpMethod.GET)
        "/api/modelCatalogue/core/relationshipType/$id" (controller: 'relationshipType', action: 'update', method: HttpMethod.PUT)
        "/api/modelCatalogue/core/relationshipType/$id" (controller: 'relationshipType', action: 'delete', method: HttpMethod.DELETE)
        "/api/modelCatalogue/core/relationshipType/elementClasses"(controller: 'relationshipType', action: 'elementClasses', method: HttpMethod.GET)

        // CsvTransformation
        "/api/modelCatalogue/core/csvTransformation" (controller: 'csvTransformation', action: 'index', method: HttpMethod.GET)
        "/api/modelCatalogue/core/csvTransformation" (controller: 'csvTransformation', action: 'save', method: HttpMethod.POST)
        "/api/modelCatalogue/core/csvTransformation/search/$search?" (controller: 'csvTransformation', action: 'search', method: HttpMethod.GET)
        "/api/modelCatalogue/core/csvTransformation/$id/validate" (controller: 'csvTransformation', action: 'validate', method: HttpMethod.POST)
        "/api/modelCatalogue/core/csvTransformation/validate" (controller: 'csvTransformation', action: 'validate', method: HttpMethod.POST)
        "/api/modelCatalogue/core/csvTransformation/$id" (controller: 'csvTransformation', action: 'show', method: HttpMethod.GET)
        "/api/modelCatalogue/core/csvTransformation/$id" (controller: 'csvTransformation', action: 'update', method: HttpMethod.PUT)
        "/api/modelCatalogue/core/csvTransformation/$id" (controller: 'csvTransformation', action: 'delete', method: HttpMethod.DELETE)
        "/api/modelCatalogue/core/csvTransformation/$id/transform"(controller: 'csvTransformation', action: 'transform', method: HttpMethod.POST)

        // DataModelPolicy
        "/api/modelCatalogue/core/dataModelPolicy" (controller: 'dataModelPolicy', action: 'index', method: HttpMethod.GET)
        "/api/modelCatalogue/core/dataModelPolicy" (controller: 'dataModelPolicy', action: 'save', method: HttpMethod.POST)
        "/api/modelCatalogue/core/dataModelPolicy/search/$search?" (controller: 'dataModelPolicy', action: 'search', method: HttpMethod.GET)
        "/api/modelCatalogue/core/dataModelPolicy/$id/validate" (controller: 'dataModelPolicy', action: 'validate', method: HttpMethod.POST)
        "/api/modelCatalogue/core/dataModelPolicy/validate" (controller: 'dataModelPolicy', action: 'validate', method: HttpMethod.POST)
        "/api/modelCatalogue/core/dataModelPolicy/$id" (controller: 'dataModelPolicy', action: 'show', method: HttpMethod.GET)
        "/api/modelCatalogue/core/dataModelPolicy/$id" (controller: 'dataModelPolicy', action: 'update', method: HttpMethod.PUT)
        "/api/modelCatalogue/core/dataModelPolicy/$id" (controller: 'dataModelPolicy', action: 'delete', method: HttpMethod.DELETE)


        // DataArchitect
        "/api/modelCatalogue/core/dataArchitect/metadataKeyCheck/$key?" (controller: "dataArchitect", action: 'metadataKeyCheck', method: HttpMethod.GET)
        "/api/modelCatalogue/core/dataArchitect/getSubModelElements/$modelId?" (controller: "dataArchitect", action: 'getSubModelElements', method: HttpMethod.GET)
        "/api/modelCatalogue/core/dataArchitect/findRelationsByMetadataKeys/$key?" (controller: "dataArchitect", action: 'findRelationsByMetadataKeys', method: HttpMethod.GET)
        "/api/modelCatalogue/core/dataArchitect/elementsFromCSV" (controller: "dataArchitect", action: "elementsFromCSV", method: HttpMethod.POST)
        "/api/modelCatalogue/core/dataArchitect/modelsFromCSV" (controller: "dataArchitect", action: "modelsFromCSV", method: HttpMethod.POST)
        "/api/modelCatalogue/core/dataArchitect/generateSuggestions" (controller: "dataArchitect", action: "generateSuggestions", method: HttpMethod.POST)
        "/api/modelCatalogue/core/dataArchitect/deleteSuggestions" (controller: "dataArchitect", action: "deleteSuggestions", method: HttpMethod.POST)
        "/api/modelCatalogue/core/dataArchitect/suggestionsNames" (controller: "dataArchitect", action: "suggestionsNames", method: HttpMethod.GET)
        "/api/modelCatalogue/core/dataArchitect/imports/upload" (controller: "dataImport", action: 'upload', method: HttpMethod.POST)


        "/"(view:"index")
        "/load"(view:"load")
        "/api/modelCatalogue/core/search/reindex" (controller:"search", action : 'reindex', method: HttpMethod.POST)
        "/api/modelCatalogue/core/search/$search?" (controller:"search", action : 'index', method: HttpMethod.GET)
        "/api/modelCatalogue/core/relationship/$id/restore" (controller:"relationship", action : 'restore', method: HttpMethod.POST)
	}
}
