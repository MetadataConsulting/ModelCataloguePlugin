The @fixtureLoader.load()@ methods (and [build-test-data @build()@ methods|guide:btd]) return an object of type @Fixture@. 

These objects hold all of the loaded domain objects which can then be referenced by name...

{code}
def fixture = fixtureLoader.load("gina")
assert fixture.gina.title == "Groovy In Action"
{code}

A convenient pattern is to use Groovy's @with()@ method on the @Fixture@ object returned to allow a more convenient syntax...

{code}
fixtureLoader.load("gina").with {
  assert gina.title == "Groovy In Action"
}
{code}

The @fixtureLoader@ @load()@ and @build()@ methods are also available on @Fixture@ objects. This can be used to _stack_ fixtures. See the section on [stacking|guide:stacking] for more info.