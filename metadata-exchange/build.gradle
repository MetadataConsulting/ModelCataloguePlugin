buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "gradle.plugin.com.craigburke.gradle:karma-gradle:1.4.3"
        classpath "com.craigburke.gradle:client-dependencies:1.1.1"
        classpath "org.grails.plugins:angular-scaffolding:1.0.1"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.11.1"
        classpath "org.grails.plugins:views-gradle:1.1.1"
    }
}

version "0.1"
group "metadata.exchange"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.grails-gsp"
apply plugin:"com.craigburke.karma"
apply plugin:"com.craigburke.client-dependencies"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.plugins.views-json"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    assets "com.craigburke.angular:angular-template-asset-pipeline:2.3.0"
    assets "com.craigburke.angular:angular-annotate-asset-pipeline:2.4.0"
    assets "com.craigburke:js-closure-wrap-asset-pipeline:1.2.0"
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-codecs"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-datasource"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-async"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails.plugins:cache"
    compile "org.grails:grails-plugin-gsp"
    compile "org.grails.plugins:angular-scaffolding:1.0.1"
    compile "org.grails.plugins:spring-security-rest:2.0.0.M2"
    compile "org.grails.plugins:views-json"
    compile "org.grails.plugins:views-json-templates"
    console "org.grails:grails-console"
    profile "org.grails.profiles:angular"
    provided "org.codehaus.groovy:groovy-ant"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.11.1"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testCompile "org.grails:grails-datastore-rest-client"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
}
clientDependencies {
    npm {
        'angular'('1.5.x', into: 'angular') {
            include 'angular.js'
        }
        'angular-mocks'('1.5.x', into: 'angular') {
            include 'angular-mocks.js'
        }
        'angular-resource'('1.5.x', into: 'angular') {
            include 'angular-resource.js'
        }
        'angular-ui-bootstrap'('1.3.x', into: 'angular') {
            include 'ui-bootstrap-tpls.js'
        }
        'angular-ui-router'('0.2.x', into: 'angular', from: 'release') {
            include 'angular-ui-router.js'
        }
        'bootstrap'('3.3.x', into: 'bootstrap', from: 'dist/css') {
            include 'bootstrap.css'
        }
    }
}

karma {
    dependencies(['karma-wrap-preprocessor'])

    profile 'angularJS'

    preprocessors = [
        'grails-app/assets/javascripts/**/*.js': ['wrap']
    ]

    wrapPreprocessor = [
        template: "(function () { 'use strict';  <%= contents %> })()"
    ]
}


assets {
    minifyJs = true
    minifyCss = true
}
